# =====================================================
# Stage 1: System Dependencies
# =====================================================
FROM ubuntu:24.04

# LaTeX/XeLaTeX is required for PDF rendering
# HTML export works out-of-the-box, but PDF generation requires LaTeX engine

ARG DEV_USER=user \
    MICROMAMBA_VERSION=1.5.8 \
    QUARTO_VERSION=1.7.0
ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \ 
    MAMBA_ROOT_PREFIX=/opt/conda \
    ENV_NAME=dev

# libfontconfig1: Essential font libraries for XeLaTeX rendering
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    tar \
    bzip2 \
    pandoc \
    libfontconfig1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN curl -Ls "https://micro.mamba.pm/api/micromamba/linux-64/${MICROMAMBA_VERSION}" \
    | tar -xjv bin/micromamba \
    && mv bin/micromamba /usr/local/bin/ \
    && chmod +x /usr/local/bin/micromamba

RUN curl -sSL "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb" -o quarto.deb \
    && dpkg -i quarto.deb \
    && rm quarto.deb

# =====================================================
# Stage 2: User Configuration
# =====================================================
RUN useradd --create-home --shell /bin/bash ${DEV_USER} \
    && mkdir -p ${MAMBA_ROOT_PREFIX} \
    && chown -R ${DEV_USER}:${DEV_USER} ${MAMBA_ROOT_PREFIX} \
    && chown -R ${DEV_USER}:${DEV_USER} /home/${DEV_USER}

USER ${DEV_USER}
WORKDIR /home/${DEV_USER}

# =====================================================
# Stage 3: R Environment Setup
# =====================================================
RUN micromamba shell init --shell bash --root-prefix="${MAMBA_ROOT_PREFIX}" && \
    echo 'eval "$(micromamba shell hook --shell bash)"' >> ~/.bashrc && \
    echo "micromamba activate ${ENV_NAME}" >> ~/.bashrc

# r-tinytex: Lightweight LaTeX distribution for R integration
RUN micromamba create -y -n ${ENV_NAME} -c conda-forge \
    r-base \
    r-knitr \
    r-rmarkdown \
    r-tinytex \
    && micromamba clean --all -y

ENV PATH="${MAMBA_ROOT_PREFIX}/envs/${ENV_NAME}/bin:${PATH}" \
    R_HOME="${MAMBA_ROOT_PREFIX}/envs/${ENV_NAME}/lib/R" \
    R_LIBS_USER="${MAMBA_ROOT_PREFIX}/envs/${ENV_NAME}/lib/R/library"

RUN echo 'options(repos = c(CRAN = "https://cloud.r-project.org"))' >> ~/.Rprofile && \
    echo '.libPaths(c(Sys.getenv("R_LIBS_USER"), .libPaths()))' >> ~/.Rprofile

# NOTE: LaTeX Distribution Choice - TinyTeX vs Full TeX Live
# TinyTeX is selected over traditional TeX Live for container optimization:
# - Minimal footprint: ~150 MB vs 4+ GB for full TeX Live distribution
# - Automatic package management: missing LaTeX packages are installed on-demand during rendering
# - Quarto integration: Native support via 'quarto install tinytex' command maintained by Quarto developers
# - Container-friendly: Reduces image size while maintaining full PDF rendering capabilities
# - Just-in-time installation: Only required packages are downloaded, keeping the base image lean

# Install TinyTeX via Quarto for PDF rendering capabilities
# - Executed as user to maintain proper permissions
# - Activates conda environment for consistent tool access
# - No-prompt flag ensures automated installation
# - TinyTeX provides minimal LaTeX distribution for document compilation
# - PATH configuration ensures TinyTeX binaries are accessible in future shell sessions
RUN bash -c "source ~/.bashrc micromamba activate ${ENV_NAME} && \ 
    quarto install tool tinytex --no-prompt && \
    echo 'export PATH=\"\$HOME/.TinyTeX/bin/x86_64-linux:\$PATH\"' >> ~/.bashrc"

# Update container PATH to include TinyTeX binaries
ENV PATH="/home/${DEV_USER}/.TinyTeX/bin/x86_64-linux:${PATH}"

# =====================================================
# Stage 4: Verification and Runtime Configuration
# =====================================================
CMD ["bash", "-i", "-c", "\
    micromamba --version && \
    R --version && \
    quarto --version && \
    tlmgr --version && \
    quarto check && \
    bash"]